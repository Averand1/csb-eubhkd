{"version":3,"sources":["components/Wrapper.js","context/CalcContext.js","components/Screen.js","components/ButtonBox.js","components/Button.js","App.js","index.js"],"names":["Wrapper","children","className","CalcContext","createContext","CalcProvider","useState","sign","num","res","providerValue","calc","setCalc","Provider","value","Screen","useContext","max","mode","ButtonBox","Button","btn","commaClick","toString","includes","resetClick","signClick","equalsClick","a","b","x","persenClick","invertClick","onClick","results","C","numberValue","numberString","Number","handleClickButton","btnValues","App","flat","map","i","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.8c2e8805.chunk.js","sourcesContent":["const Wrapper = ({ children }) => {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n};\r\nexport default Wrapper;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\nconst CalcProvider = ({ children }) => {\r\n  const [calc, setCalc] = useState({\r\n    sign: \"\",\r\n    num: 30,\r\n    res: 0\r\n  });\r\n\r\n  const providerValue = {\r\n    calc,\r\n    setCalc\r\n  };\r\n\r\n  return (\r\n    <CalcContext.Provider value={providerValue}>\r\n      {children}\r\n    </CalcContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CalcProvider;\r\n","import { CalcContext } from \"../context/CalcContext\";\r\nimport { useContext } from \"react\";\r\nimport { Textfit } from \"react-textfit\";\r\n\r\nconst Screen = () => {\r\n  const { calc } = useContext(CalcContext);\r\n\r\n  return (\r\n    <Textfit className=\"screen\" max={70} mode=\"single\">\r\n      {calc.num ? calc.num : calc.res}\r\n    </Textfit>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","const ButtonBox = ({ children }) => {\r\n  return <div className=\"buttonBox\">{children}</div>;\r\n};\r\n\r\nexport default ButtonBox;\r\n","import { useContext } from \"react\";\r\nimport { CalcContext } from \"../context/CalcContext\";\r\n\r\nconst getStyleName = (btn) => {\r\n  const className = {\r\n    \"=\": \"equals\",\r\n    x: \"opt\",\r\n    \"-\": \"opt\",\r\n    \"+\": \"opt\",\r\n    \"/\": \"opt\"\r\n  };\r\n  return className[btn];\r\n};\r\n\r\nconst Button = ({ value }) => {\r\n  const { calc, setCalc } = useContext(CalcContext);\r\n\r\n  // User click comma\r\n  const commaClick = () => {\r\n    setCalc({\r\n      ...calc,\r\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num\r\n    });\r\n  };\r\n  // User click C\r\n  const resetClick = () => {\r\n    setCalc({ sign: \"\", num: 0, res: 0 });\r\n  };\r\n  // User click number\r\n  const handleClickButton = () => {\r\n    const numberString = value.toString();\r\n\r\n    let numberValue;\r\n    if (numberString === \"0\" && calc.num === 0) {\r\n      numberValue = \"0\";\r\n    } else {\r\n      numberValue = Number(calc.num + numberString);\r\n    }\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: numberValue\r\n    });\r\n  };\r\n  // User click operation\r\n  const signClick = () => {\r\n    setCalc({\r\n      sign: value,\r\n      res: !calc.res && calc.num ? calc.num : calc.res,\r\n      num: 0\r\n    });\r\n  };\r\n  // User click equals\r\n  const equalsClick = () => {\r\n    if (calc.res && calc.num) {\r\n      const math = (a, b, sign) => {\r\n        const result = {\r\n          \"+\": (a, b) => a + b,\r\n          \"-\": (a, b) => a - b,\r\n          x: (a, b) => a * b,\r\n          \"/\": (a, b) => a / b\r\n        };\r\n        return result[sign](a, b);\r\n      };\r\n      setCalc({\r\n        res: math(calc.res, calc.num, calc.sign),\r\n        sign: \"\",\r\n        num: 0\r\n      });\r\n    }\r\n  };\r\n  // User click persen\r\n  const persenClick = () => {\r\n    setCalc({\r\n      num: calc.num / 100,\r\n      res: calc.res / 100,\r\n      sign: \"\"\r\n    });\r\n  };\r\n  // User click invert button\r\n  const invertClick = () => {\r\n    setCalc({\r\n      num: calc.num ? calc.num * -1 : 0,\r\n      res: calc.res ? calc.res * -1 : 0,\r\n      sign: \"\"\r\n    });\r\n  };\r\n\r\n  const handleBtnClick = () => {\r\n    const results = {\r\n      \".\": commaClick,\r\n      C: resetClick,\r\n      \"/\": signClick,\r\n      x: signClick,\r\n      \"-\": signClick,\r\n      \"+\": signClick,\r\n      \"=\": equalsClick,\r\n      \"%\": persenClick,\r\n      \"+-\": invertClick\r\n    };\r\n    if (results[value]) {\r\n      return results[value]();\r\n    } else {\r\n      return handleClickButton();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleBtnClick}\r\n      className={`${getStyleName(value)} button`}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Wrapper from \"./components/Wrapper\";\r\nimport Screen from \"./components/Screen\";\r\nimport ButtonBox from \"./components/ButtonBox\";\r\nimport Button from \"./components/Button\";\r\nimport CalcProvider from \"./context/CalcContext\";\r\n\r\nconst btnValues = [\r\n  [\"C\", \"+-\", \"%\", \"/\"],\r\n  [7, 8, 9, \"x\"],\r\n  [4, 5, 6, \"-\"],\r\n  [1, 2, 3, \"+\"],\r\n  [0, \".\", \"=\"]\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <CalcProvider>\r\n      <Wrapper>\r\n        <Screen />\r\n        <ButtonBox>\r\n          {btnValues.flat().map((btn, i) => (\r\n            <Button value={btn} key={i} />\r\n          ))}\r\n        </ButtonBox>\r\n      </Wrapper>\r\n    </CalcProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}